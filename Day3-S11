class Main {
    public static void main(String[] args) {
        ThreadOne t1 = new ThreadOne();
        ThreadTwo t2 = new ThreadTwo();

        t1.start();
        t2.start();

        try {
            t1.join();
            t2.join();
        } catch (InterruptedException e) {
            System.out.println("Main thread interrupted.");
        }

        System.out.println("Main thread exiting.");
    }
}

class ThreadOne extends Thread {
    @Override
    public void run() {
        System.out.println("ThreadOne started.");
        for (int i = 1; i <= 10; i++) {
            if (i % 2 == 0) {
                System.out.println("ThreadOne contains even number, joining ThreadTwo.");
                try {
                    sleep(10000);
                } catch (InterruptedException e) {
                    System.out.println("ThreadOne interrupted while sleeping.");
                }
                return;
            }
        }
        System.out.println("ThreadOne contains no even number, going to sleep for 10000ms.");
        try {
            sleep(10000);
        } catch (InterruptedException e) {
            System.out.println("ThreadOne interrupted while sleeping.");
        }
        System.out.println("ThreadOne woke up from sleep.");
    }
}

class ThreadTwo extends Thread {
    @Override
    public void run() {
        System.out.println("ThreadTwo started.");
        for (int i = 1; i <= 10; i++) {
            if (i % 2 == 0) {
                System.out.println("ThreadTwo contains even number, joining ThreadOne.");
                try {
                    sleep(5000);
                } catch (InterruptedException e) {
                    System.out.println("ThreadTwo interrupted while sleeping.");
                }
                return;
            }
        }
        System.out.println("ThreadTwo contains no even number, going to sleep for 5000ms.");
        try {
            sleep(5000);
        } catch (InterruptedException e) {
            System.out.println("ThreadTwo interrupted while sleeping.");
        }
        System.out.println("ThreadTwo woke up from sleep.");
    }
}
